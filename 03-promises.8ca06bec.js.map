{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,iBAC/BI,OAAQL,SAASC,cAAc,WAOjC,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAELH,EACFF,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CAbbJ,EAAKC,KAAKgB,iBAAiB,UAmB3B,SAAsBC,GACpBA,EAAEC,iBAEH,IAAIC,EAAWC,OAAOrB,EAAKI,MAAMkB,OAC9BC,EAAUF,OAAOrB,EAAKK,KAAKiB,OACzBE,EAAYH,OAAOrB,EAAKM,OAAOgB,OAErCG,QAAQC,IAAI,SAAUN,GACtBK,QAAQC,IAAI,QAASH,GACnBE,QAAQC,IAAI,UAAWF,GAGvB,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAWG,IAG9BnB,EAAcmB,EAAGP,GACdQ,MAAK,EAACnB,SAAEA,EAAQL,MAAEA,MACjBN,EAAA+B,OAAOC,QAAQ,uBAAqBrB,QAAiBL,MAAU,IAGhE2B,OAAM,EAACtB,SAAEA,EAAQL,MAAEA,MACrBN,EAAA+B,OAAOG,QAAQ,sBAAoBvB,QAAeL,MAAU,IAG7DgB,GAAYG,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n  button: document.querySelector('button'),\n  \n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((fulfill, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n     \n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n let evtDelay = Number(refs.delay.value);\nlet evtStep = Number(refs.step.value);\n  let evtAmount = Number(refs.amount.value);\n  \nconsole.log('delay:', evtDelay); \nconsole.log('step:', evtStep); \n  console.log('amount:', evtAmount); \n  \n  \n  for (let i = 1; i <= evtAmount; i++) {\n\n   \n    createPromise(i, evtDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n       })\n    \n      .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    evtDelay += evtStep;\n   \n    }\n}\n "],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","button","$47d4ff9957288465$var$createPromise","position","Promise","fulfill","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","evtDelay","Number","value","evtStep","evtAmount","console","log","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.8ca06bec.js.map"}